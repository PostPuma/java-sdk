/*
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import PostPuma.JSON;

/**
 * AccountData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T16:39:28.677807+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class AccountData {
  public static final String SERIALIZED_NAME_UNION_ID = "union_id";
  @SerializedName(SERIALIZED_NAME_UNION_ID)
  private String unionId;

  public static final String SERIALIZED_NAME_IS_PRIVATE = "is_private";
  @SerializedName(SERIALIZED_NAME_IS_PRIVATE)
  private Boolean isPrivate;

  public static final String SERIALIZED_NAME_DUET_DISABLED = "duet_disabled";
  @SerializedName(SERIALIZED_NAME_DUET_DISABLED)
  private Boolean duetDisabled;

  public static final String SERIALIZED_NAME_PRIVACY_LEVELS = "privacy_levels";
  @SerializedName(SERIALIZED_NAME_PRIVACY_LEVELS)
  private List<String> privacyLevels = new ArrayList<>();

  public static final String SERIALIZED_NAME_STITCH_DISABLED = "stitch_disabled";
  @SerializedName(SERIALIZED_NAME_STITCH_DISABLED)
  private Boolean stitchDisabled;

  public static final String SERIALIZED_NAME_COMMENT_DISABLED = "comment_disabled";
  @SerializedName(SERIALIZED_NAME_COMMENT_DISABLED)
  private Boolean commentDisabled;

  public static final String SERIALIZED_NAME_MAX_VIDEO_POST_DURATION_SEC = "max_video_post_duration_sec";
  @SerializedName(SERIALIZED_NAME_MAX_VIDEO_POST_DURATION_SEC)
  private Integer maxVideoPostDurationSec;

  public AccountData() {
  }

  public AccountData unionId(String unionId) {
    this.unionId = unionId;
    return this;
  }

  /**
   * Get unionId
   * @return unionId
   */
  @javax.annotation.Nullable
  public String getUnionId() {
    return unionId;
  }

  public void setUnionId(String unionId) {
    this.unionId = unionId;
  }


  public AccountData isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

  /**
   * Get isPrivate
   * @return isPrivate
   */
  @javax.annotation.Nullable
  public Boolean getIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }


  public AccountData duetDisabled(Boolean duetDisabled) {
    this.duetDisabled = duetDisabled;
    return this;
  }

  /**
   * Get duetDisabled
   * @return duetDisabled
   */
  @javax.annotation.Nullable
  public Boolean getDuetDisabled() {
    return duetDisabled;
  }

  public void setDuetDisabled(Boolean duetDisabled) {
    this.duetDisabled = duetDisabled;
  }


  public AccountData privacyLevels(List<String> privacyLevels) {
    this.privacyLevels = privacyLevels;
    return this;
  }

  public AccountData addPrivacyLevelsItem(String privacyLevelsItem) {
    if (this.privacyLevels == null) {
      this.privacyLevels = new ArrayList<>();
    }
    this.privacyLevels.add(privacyLevelsItem);
    return this;
  }

  /**
   * Get privacyLevels
   * @return privacyLevels
   */
  @javax.annotation.Nullable
  public List<String> getPrivacyLevels() {
    return privacyLevels;
  }

  public void setPrivacyLevels(List<String> privacyLevels) {
    this.privacyLevels = privacyLevels;
  }


  public AccountData stitchDisabled(Boolean stitchDisabled) {
    this.stitchDisabled = stitchDisabled;
    return this;
  }

  /**
   * Get stitchDisabled
   * @return stitchDisabled
   */
  @javax.annotation.Nullable
  public Boolean getStitchDisabled() {
    return stitchDisabled;
  }

  public void setStitchDisabled(Boolean stitchDisabled) {
    this.stitchDisabled = stitchDisabled;
  }


  public AccountData commentDisabled(Boolean commentDisabled) {
    this.commentDisabled = commentDisabled;
    return this;
  }

  /**
   * Get commentDisabled
   * @return commentDisabled
   */
  @javax.annotation.Nullable
  public Boolean getCommentDisabled() {
    return commentDisabled;
  }

  public void setCommentDisabled(Boolean commentDisabled) {
    this.commentDisabled = commentDisabled;
  }


  public AccountData maxVideoPostDurationSec(Integer maxVideoPostDurationSec) {
    this.maxVideoPostDurationSec = maxVideoPostDurationSec;
    return this;
  }

  /**
   * Get maxVideoPostDurationSec
   * @return maxVideoPostDurationSec
   */
  @javax.annotation.Nullable
  public Integer getMaxVideoPostDurationSec() {
    return maxVideoPostDurationSec;
  }

  public void setMaxVideoPostDurationSec(Integer maxVideoPostDurationSec) {
    this.maxVideoPostDurationSec = maxVideoPostDurationSec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountData accountData = (AccountData) o;
    return Objects.equals(this.unionId, accountData.unionId) &&
        Objects.equals(this.isPrivate, accountData.isPrivate) &&
        Objects.equals(this.duetDisabled, accountData.duetDisabled) &&
        Objects.equals(this.privacyLevels, accountData.privacyLevels) &&
        Objects.equals(this.stitchDisabled, accountData.stitchDisabled) &&
        Objects.equals(this.commentDisabled, accountData.commentDisabled) &&
        Objects.equals(this.maxVideoPostDurationSec, accountData.maxVideoPostDurationSec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unionId, isPrivate, duetDisabled, privacyLevels, stitchDisabled, commentDisabled, maxVideoPostDurationSec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountData {\n");
    sb.append("    unionId: ").append(toIndentedString(unionId)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    duetDisabled: ").append(toIndentedString(duetDisabled)).append("\n");
    sb.append("    privacyLevels: ").append(toIndentedString(privacyLevels)).append("\n");
    sb.append("    stitchDisabled: ").append(toIndentedString(stitchDisabled)).append("\n");
    sb.append("    commentDisabled: ").append(toIndentedString(commentDisabled)).append("\n");
    sb.append("    maxVideoPostDurationSec: ").append(toIndentedString(maxVideoPostDurationSec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("union_id");
    openapiFields.add("is_private");
    openapiFields.add("duet_disabled");
    openapiFields.add("privacy_levels");
    openapiFields.add("stitch_disabled");
    openapiFields.add("comment_disabled");
    openapiFields.add("max_video_post_duration_sec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountData is not found in the empty JSON string", AccountData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("union_id") != null && !jsonObj.get("union_id").isJsonNull()) && !jsonObj.get("union_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `union_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("union_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("privacy_levels") != null && !jsonObj.get("privacy_levels").isJsonNull() && !jsonObj.get("privacy_levels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_levels` to be an array in the JSON string but got `%s`", jsonObj.get("privacy_levels").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountData.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountData>() {
           @Override
           public void write(JsonWriter out, AccountData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountData
   * @throws IOException if the JSON string is invalid with respect to AccountData
   */
  public static AccountData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountData.class);
  }

  /**
   * Convert an instance of AccountData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

